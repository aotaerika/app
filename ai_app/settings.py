"""
Django settings for ai_app project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^*128mbet+ryv8j4)-yh_qnd&jolohte8joz!yq5=)q*10xlf^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "nlp",
    "accounts",
    #'accounts.apps.AccountsConfig',
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
   
    
   
    
]

AUTH_USER_MODEL='accounts.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ai_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
               
            ],
        },
    },
]

WSGI_APPLICATION = 'ai_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME':os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "ja"

TIME_ZONE = "Asia/Tokyo"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'


STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MESSAGE_TAGS = {
    messages.ERROR: 'alert alert-danger',
    messages.WARNING: 'alert alert-warning',
    messages.SUCCESS: 'alert alert-success',
    messages.INFO: 'alert alert-info',
}

DATABASES={
    "default":{
        "ENGINE":"django.db.backends.postgresql_psycopg2",
        "NAME":"ai_app",
        "USER":"postgres",
        "PASSWORD":"pos7464shin",
        "HOST":"",
        "PORT":"",
        
    }
}

#ロギング設定
LOGGING={
    "version":1,#固定
    "disable_exsiting_loggers":False,
    
    #ロガーの設定
    "loggers":{
        #Djangoが利用するロガー
        "django":{
            "handlers":["console"],
            "level":"INFO",
        },
        #アプリケーションが利用するロガー
        "nlp":{
            "handlers":["console"],
            "level":"DEBUG",
        },
    },
    #ハンドラの設定
    "handlers":{
        "console":{
            "level":"DEBUG",
            "class":"logging.StreamHandler",    
            "formatter":"dev"
        },
    },
    #フォーマッタの設定
    "formatters":{
        "dev":{
            "format":"\t".join([
                "%(asctime)s",
                "[%(levelname)s]",
                "%(pathname)s(Line:%(lineno)d)",
                "%(message)s"
            ])
        },
    }
}

AUTH_USER_MODEL="accounts.CustomUser"

#django-allauthで利用するdjango.contrib.siteを使うためにサイト識別用idを設定
SITE_ID=1

AUTHENTICATION_BACKENDS=(
    "allauth.account.auth_backends.AuthenticationBackend",
    #一般ユーザー用（メルアド認証)
    "django.contrib.auth.backends.ModelBackend",
    #管理サイト用(ユーザー名）
)
#メルアド認証に変更する設定
ACCOUNT_AUTHENTICATION_METHOD="email"
ACCOUNT_USERNAME_REQUIRED=False

#サインアップにメルアド確認をはさむよう設定
ACCOUNT_EMAIL_VERIFICATION="mandatory"#メール認証の場合"mandatory"
ACCOUNT_EMAIL_REQUIRED=True


#ログイン／ログアウト後の転移先を設定
LOGIN_REDIRECT_URL="nlp:home"
ACCOUNT_LOGOUT_REDIRECT_URL="account_login"

#ログアウトリンクのクリック一発でログアウトする設定
ACCOUNT_LOGOUT_ON_GET=True

#django-allauthが送信するメールの件名に自動付与される接頭辞をブランクにする設定
ACCOUNT_EMAIL_SUBJECT_PREFIX=""

#デフォルトのメール送信元
DEFALT_FROM_EMAIL="admin@example.com"

# ユーザ登録時に確認メールを送信するか(none=送信しない, mandatory=送信する)
ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_EMAIL_REQUIRED = True   # ユーザ登録にメルアド必須にする

